Remove left recursions 
<expr> -> <term><expr>’
<expr>’ -> +<term><expr>’
<expr>’  -> - <term><expr>’
<expr>’ -> lambda
<term> -> <factor><term>’
<term>’ -> *<factor><term>’
<term>’ -> /<factor><term>’
<term>’ -> lambda
<factor> -> <id>
<factor> -> <number>
<factor> -> (<expr>)
<id> -> <letter> 
<id> -> <letter><id>
FIND FOLLOW AND FIRST 

FIRST(<expr>) = { ( a-e 0-9 lambda }
FIRST(<expr>’) = { + - lambda}
FIRST(<term>) = { ( a-e 0-9 }
FIRST(<term’>) = { * / lambda }
FIRST(<factor>) = { ( a-e 0-9 }

FOLLOW(<expr>) ={ $ ) }
FOLLOW(<expr’>) = { $ )}
FOLLOW<term>) = { + - $ ) }
FOLLOW(<term’>) = { + - $ )}
FOLLOW(<factor>) = { + - $ ) * / }
